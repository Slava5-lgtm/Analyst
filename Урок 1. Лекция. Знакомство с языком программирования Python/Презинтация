                                            Начало работы с Python

1. Python является интерпретируемым ЯП, поэтому перед тем, как начать изучать синтаксис необходимо установить интерпретатор: по ссылке (https://www.python.org/downloads/)

2. На macOS и Linux версию необходимо обновить, так как уже Python 

3. С Windows, начиная с версии 8 и выше, можно смело устанавливать последнюю версию интерпретатора, но с Windows 7 или ниже необходимо установить версию 3.8 или ниже

После установки откройте командную строку(cmd), введите слово “python”, если все успешно установилось, у Вас выведется сообщение: “Python 3.10.7….”, какая именно версия
была установлена

                                            Среда разработки

Мы будем работать в Visual Studio Code

● Чтобы работать было удобнее, установите расширение, которое будет подсвечивать синтаксис Python.

● Расширения(Extension) → введите в поиске «python» → Установить(install).

                                            Виртуальное окружение

Мы с Вами установили интерпретатор, который позволит нам запускать пусть наши скрипты на Python. Представьте себе такую ситуацию: допустим у нас есть два проекта:
"Project A" и "Project B". Оба проекта зависят от библиотеки Simplejson. Проблема возникает, когда для "Project A" нужна версия Simplejson 3.0.0, а для проекта
"Project B" — 3.17.0. Python не может различить версии в глобальном каталоге site-packages — в нем останется только та версия пакета, которая была установлена последней.
Решение данной пробллемы — создание виртуального окружения (virtual environment).

                                            Как добавить виртуальное окружение в свое приложение:
1. Создать новый проект в пустой папке (рабочего пространства).

2. В терминале прописать python3 -m venv .folder (.folder — название папки, в которой будет работа).

3. Выбираем “Yes” для работы с новым виртуальным окружением.

4. Справа внизу у Вас должно появиться виртуальное окружение, которое мы установили

                                            Как запустить скрипт?

Если после выполнения команды в терминале остаются стрелки >>>, то нажмите ctrl + Z, чтобы выйти непосредственно в терминал. Чтобы запустить программный код, используйте
следующую команду в терминале:

python name_file.py

Где name_file - имя вашего файла

                                            Оператор вывода и ввода данных


print(var1, var2, var3) - функция, которая выводит данных на экран, где var1, var2, va3 - переменные или значения.

Синтаксис Python
Синтаксис Python очень простой и примитивный, приведу пример с языком программирования C#, который Вы проходили ранее.

                                            Базовые типы данных Python

                                    int----------Целые числа
                                    float--------Дробные числа
                                    bool---------Логический тип данных (True/False)
                                    str----------Строка

Объявление переменной
● название переменной = значение переменной (один знак равенства обозначает присвоение значения к переменной)

                                                Как узнать какой тип данных в переменной?

Возникают такие ситуации, когда мы хотим узнать тип данных у переменной, для того, чтобы это выполнить необходимо применить функции type(varName).

                                                Как объявить строку?

Чтобы создать строку и сохранить ее в переменную необходимо написать следующим образом:

s = ‘hello,’ # создание 1-ой строки
s = “world” # создание 2-ой строки
print(s, w)
Как мы видим, строку можно создавать как одинарными кавычками, так и двойными.

                                                Как сделать комментарий?

Если Вы хотите закомментировать 1 строку достаточно применить специальный символ “#", если Вам нужно закомментировать сразу несколько строк выделите их и нажмите ctrl + /
или же используйте тройные кавычки ‘’’

# print(1)
# —------------------
’’’print(1)
print(1)
print(1)
print(1)
print(1)’’’

                                                Использование одинарных и двойных кавычек внутри строки

Можно ли писать кавычки в виде текста внутри строки? Пример: my mom shouted: “good luck!”. Но для того чтобы создать строку мы должны использовать еще одни кавычки, как
это сделать?
Используйте разные кавычки для объявления переменной и внутри строки:

s = 'hello "world"'
s = "hello 'world'"
s = 'hello \"world'

