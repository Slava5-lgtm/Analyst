                                                            
                                                            Файлы

Файлы в текстовом формате используются для:
● Хранения данных
● Передачи данных в клиент-серверных проектах
● Хранения конфигов
● Логирования действий

Что нужно для работы с файлами:
1. Завести переменную, которая будет связана с этим текстовым файлом.
2. Указать путь к файлу.
3. Указать, в каком режиме мы будем работать с файлом

Варианты режима (мод):
a – открытие для добавления данных.
○ Позволяет дописывать что-то в имеющийся файл.
○ Если вы попробуете дописать что-то в несуществующий файл, то файл будет создан и в него начнется запись.

r – открытие для чтения данных.
○ Позволяет читать данные из файла.
○ Если вы попробуете считать данные из файла, которого не существует, программа выдаст ошибку.

w – открытие для записи данных.
○ Позволяет записывать данные и создавать файл, если его не существует.

Миксованные режимы:
1. w+
○ Позволяет открывать файл для записи и читать из него.
○ Если файла не существует, он будет создан.

2. r+
○ Позволяет открывать файл для чтения и дописывать в него.
○ Если файла не существует, программа выдаст ошибку. 

Примеры использования различных режимов в коде:
1. Режим a
 colors = ['red', 'green', 'blue'] / Создали список в котором сть три значения
 data = open('file.txt', 'a') / Открываем файл, указываем переменую (data). Хочу открыть (open). Файл (file.txt) смотрим в дитректорию (Правый верхний угол Проводник) такого файла
                              / нету но мы указываем режим (а). Соотвествено у нас файл создаться (так же через запятую можно указать кодировку (,encoding=utf-8)). Здесь указываем
                              / режим, в котором будем работать

 data.writelines(colors) / Как только открыли файл будим работать с этой переменой (data). Оброшяемся к файлу (data) и говорим что хочу записать туда наши даные (writelines) из
                         / списка (colors). У нас  разделителей не будет ьак как мы их записываем вподрят
 data.close() /  — используется для закрытия файла, чтобы разорвать подключение файловой
● data.close() — используется для закрытия файла, чтобы разорвать подключение файловой

/                                                                       Запускаем

/ В проводнике создался файл (file.tx) и в нем замись redgreenblue.
/ Поменяли 'green' на '8888'

/                                                                       Запускаем

/  redgreenbluered8888blue - добавилось red8888blue

● data.close() — используется для закрытия файла, чтобы разорвать подключение файловой переменной с файлом на диске.
● exit() — позволяет не выполнять код, прописанный после этой команды в скрипте.
● В итоге создаётся текстовый файл с текстом внутри: redbluedreen.
● При повторном выполнении скрипта redgreenbluered8888blue — добавление в существующий файл, а не перезапись файлов.

/ При постояном открытии, и закрытии файла очень не удобно и можно про это забыть

/                                                                   Как это исправить

Ещё один способ записи данных в файл:
with open('file.txt', 'w') as data: / Мы испольэуем эту конструкции (with open('file.txt')) режим записи будит (w) и мы открываем наш файлс именем (as (data))
 data.write('line 1\n') / Должны использывать оступы и как только наша программа завершит свою работу в цикли (with) то наш файл овтоматически закроеться
 data.write('line 2\n')

/ Соотвествено записываем наш файл при помоши фунции (write) строку ('line 1') и напишем (\n) тоесть перенос на новую строку

/ Вспомним что у нас в файле (file.txt) содержиться какаето строка, а имено (redgreenbluered8888blue)

/                                                                        Запускаем

/ Посмотрим наш файл
/ line 1
/ line 2
/ И теперь то что было наша строкой удолилось и остлись новые даные (line 1) (line 2)

/                                                                       Посмотрим еще на один режим

2. Режим r
● Чтение данных из файла:
path = 'file.txt'
data = open('file.txt', 'r') / Открываем в режиме записи чтения
for line in data: / Проходимся по всему нашему файлу (for line in data:)
    print(line) / И напечатать наше (line)
data.close() / Закрываем файл

/                                                                        Запускаем
 
/ line 1
/ line 2

/ У нас вывелось то что в file.txt
