
                                                       Задача 1.

Создать телефонный справочник с возможностью импорта и экспорта данных в формате .txt. Фамилия, имя, отчество, номер телефона - данные, которые должны находиться в файле.

1. Программа должна выводить данные
2. Программа должна сохранять данные в текстовом файле
3. Пользователь может ввести одну из характеристик для поиска определенной записи(Например имя или фамилию человека)
4. Использование функций. Ваша программа не должна быть линейной

Создаем два файла. В первом файле имя, фамелия, номер телефона и адрес у нас будит храниться на каждой новой строке.

data_first_variant.csv

name1
surname
phone
address

name1
surname
phone
address

Во втором файле мы будим хранить через точку с запятой

data_second_variant.csv

name1; surname; phone; address
name2; surname; phone; address

Программу будем делать при помощи модулей. Тоесть у нас будит не один файл где будим посать обсолютно все функции, а несколько файлов откудо будим импортировать
различные функции.
Для начало создае наш основной файл где мы будим Встречаться с пользоватилем, знакомиться с ним и говорить что мождо делать наш бот. 

                                                        Назавем его ui.py

Что мы будим здесь делать? Создадим функцию которая будит называться interface

/* В этой функции мы будим здороваться с пользоватилем и говорить, что может зделать наш бот. И Такженапишем что может делать наш бот поставим (/n) для перехода на новую строку. 1 - это запись
  даннх. 2 - ввывод даных */

def interface(): - Создадим функцию которая будит называться interface
    print("Добрый день! Вы попали на специальный бот справочник от GeekBrains! \n 1 - это запись даннх /n 2 - ввывод даных ") 

    /* Теперь будим вводить наши данные Сосдадим переменую (command) откуда будим вводить наши данные с концоли. Будим принимать сразу в виде числа (int(input)). */

    ommand = int(input('Введите число ')) 

    /* Но может быть такое что пльзователь ошибся, что будит делать наша программа */
    /*  Делаем зашиту от пользователя. Будит выдоваться ошибка если пользователь ввел не то число. Будим делать через цикл (while) если наша коанда (command) не равна (!=) 1 или (and) и
        одновремено наша команда (command) не равна (!=) 2 */
 
    while command != 1 and command != 2: 
    print("Неправильный ввод") # Будим ввыводить (print("Неправильный ввод"))
    command = int(input('Введите число ')) # И также будем прости ввести число

# interface() - Запускаем. Проверяем как она работает

    /* И будим вызывать функции. У нас произошол ввод и будим делать проверку. Если ввели 1 вызываеться одно функция, если 2 то другая /*

    if command == 1: # если (if) наша команда (command) равна (==) 1
        input_data() # То это у нас ввод данных. И будтм ввызывать фунцию input_data().
    elif command == 2 # иначе если (elif) команда (command) равна (==) 2
        print_data() # То мы будим вызывать print_data(). Это будит ввывод данных

/* Для того что бы вызывать эти функции нужно их создать. Для этого создаем новый файл который будит называться logger.py */

/*                                                    logger.py */

/* Соотавесвено в это файле logger.py. Создадим две функции */

def input_data (): # Функции input_data и пока обозначим как пустым ()
    pass

def print_data (): # Функции print_data и пока обозначим как пустым ()
    pass

Теперь надодать понять нашему интерплитатору ui.py Что мы бирем эти фунции input_data() и print_data() из файла logger.py. Как это сделать?

В файле ui.py пишим

from logger import input_data, print_data - чт мы из файла logger ми импортируем (import) функцию input_data и print_data 

Теперь пишим фунцию logger.py.

input_data мы должны вводить данные. это будит имя, фамелия, номер телефона. Вводить напримую некрасиво, нам придеться в любом лучае повторять эти действия
несколько раз. И еще возможно придеться изменять данные. Соотвествено что бы их изменить данные. Надо вводить эти данные в файл. 

У нас есть функция которую можно использовать несколько раз. И будим также вводить наши данные при помощи функции. Наша name ровняеться name_data эту фунцию
соединим в другом файле откуда будим брать соотвествено данную функцию 

name = name_data() - Создали фунцию name
surname = surname_data 
phone = phone_data
address = address_data

                                                    data_create.py

Создаем еще один файл в котором будим прописывать эти функции и назавем его data_create.py и приступим к написанию функций

def name_data(): - Создадим фунцию def name_data
name = input('Введите ваше имя: ') - в которую будим вводить наше имя
print('Очень красивое имя!')- После того как пользователь ввел имя будим ввыводить сообшения
return name - И будем возврошять (return) нашу функцию (name) через функцию (def) name_data

Прописываем остольные фунции что бы их импортировать

def surname_data():
surname = input('Введите вашу фамелию: ')
return sername

def phone_data():
phone = input('Введите ваш телефон ')
return phone

def address_data():
address = input('Введите ваш адрес: ')
return address

                                                    logger.py

Написали функции теперь нужно импортировать их logger.py Идем в папку logger.py и пишим команду

from data_create import name_data, surname_data, phone_data, address_data - Что означает из папки data_create импортировли name_data, surname_data, phone_data,
                                                                     - address_data

Пользователь может записывать данные в двух форматах. Будим выводить обаформата и спрашивать в каком имено формате он хочет записать. Если выбирает первый вариант
то записываем в первый файл, если второй вариант то во второй файл.

Спрашиваем в каком формат будет записывать. Для этого создадим переменую (var) делаем преоброзование (int(input(И здесь выводим это сообшения (воспользуемся такой функцией как (f
(строки и будим спрашиват "В каком фрмате записать данные" \n\n (два переход на новую строку)f"1 Вариант: \n"))))) 

var = int(input(f"В каком фрмате записать данные\n\n" 
f"1 Вариант: \n"
f"{name}\n {surname}\n {phone}\n {address}\n\n"
f"2 Вариант: \n"
f"{name}; {surname}; {phone}; {address}\n"
f"Выбирите вариант: "))

Здесь так же сделаем зашиту от неправильного ввода. Мы можем взять функцию из нашего другого модуля (например из модуля ui.pt)

    / Проверка на правильность ввода
    while command != 1 and command != 2: 
        print("Неправильный ввод") 
        command = int(input('Введите число '))

    # Проверка на правильность ввода / Единственое что нужно исправить это у нас не (command) пкркменая, а (var).
    while var != 1 and command != 2: 
        print("Неправильный ввод") 
        var = int(input('Введите число '))

После того как ввели какието данные. Тоесть выброли либо 1 вариант, либо 2 вариант. Мы должны записывать. Делаем проверку с помоши (if)

    if var == 1: - Если (if) переменая (var) равна (==) 1:
        with open('data_first_variant.csv', 'a', encoding='unf-8') as f: - То мы должны открыть наш файл. Делаем это при помоши функции (with) чтобы потом его не закрывать и
                                                                         - соотвествено прописываем (open) файл называеться ('data_ferst_variant.csv', (мы открываем файл чтобы
                                                                         - записать туда данные соотвествено открываем разришения (а) ('a'), (и также указываем здесь кодировку)
                                                                         - (encoding= 'utf-8') и мы наш файл открываем (as) как имя (f)))
        f.write(f"{name}\n {surname}\n {phone}\n {address}\n\n") - Соотвествено здесь мы должны использовать функцию (write (и в скобках должы передать как имено мы будим
                                                                 - записывать наш файл ))

        И также есть второй вариант

    elif var == 2: - Иначе если (var) равняеться (==) 2 то это
        with open('data_second_variant.csv', 'a', encoding='unf-8') as f:
            f.write(f"{name}; {surname}; {phone}; {address}\n\n") - Соотавесвено здесь встовляем второй вариант (все в одну строку через точку с запятой) (и добовляем одну (\n)
                                                                  - чтобы шла запись через одну строку) 

Приступим к написанию второй функции

def print_data():
    print('Вывожу данные из 1 файла: \n') - Ввыводим сообшения что ('Вывожу даные из 1 файла: \n')
    with open('data_first_variant.csv', 'r', encoding='unf-8') as f: - Копируем первый вариане (with (with open('data_first_variant.csv', 'a', encoding='unf-8') as f:)) только
                                                                     - здесь мы будим читать меняем режим, на (г)
        data-first = f.readlines -  в переменую (data-first) мы обротимся к нашему файлу (f) и применим функцию (readlines())  
        data-first_list = [] - Сооздадим пусой список что бы добовлять каждую строку. Назовем также (data-first_list) 
        j = 0 - Создали переменую (j) для нашего цикла щечик
        for i in range(len(data-first)): - Проходим по всему списку (data-first)
            if data_first[i] == '\n' or i == len(data-first) - 1: - И будем смотреть если (if) наш (i) элемент (data-first) равен (==) переход на новую строку ('\n') или (or)
                                                                   - наша переменая (i) равна (==) последней записи как узнать последнию запись это (len(data-first)) -1:
            data_first_list.append(''.join(data_first[j:i+1]))  - Соотвествено если выполняються эти условия то мы в наш список (data-first_list) будим добовлять (append) элемент.
                                                                - Но там элементы храняться в виде списка будим преобразовывать это в стоку при помощи функции (join) (указываем
                                                                - какок будит обединения. У нас будит пустая строка (''. (ставим фунцию (join() и здесь указываем, что мы хотим
                                                                - объединять нашу (data_first[и какие элеенты, мы берем элемент (j) и с помощи срезов (:) до 1 элемента (i+1)]))))) 
            j == i - После этого мы обозначаем что наша переменая (j) равно (==) переменой (i)
            print(''.join(data_first_list)) - Ввыводим при помоши строки применяем функцию (join). Также будит пустой пропуск ('')

    print('Вывожу данные из 2 файла: \n') - Ввыводим сообшения что ('Вывожу даные из 2 файла: \n')
    with open('data_second_variant.csv', 'r', encoding='unf-8') as f:
        data-second = f.readlinesd
        print(data_second) - Так как у нас все пстрочно будим просто выводить нашу (data-second)

Чтобы програма заработала надо вызвать эту функцию

print_data()

Теперь нужно их подключить к функции ui.py Здесь хотим запустить код но не чего не происходит. Связоно с тем, что мы не как не запускаем функцию (interface) которая находится в
папки ui.py Можно это сделать немного по особеному.

                                                                Создадим папку main.py

И с этой папки будим запускать нашу функцию для начало импортируем ее

from ui import interface

И напишем такую команду:
if__name__== '__main__': - (if) если (__name__) равно (==) ('__main'):
    interface() - То мы будим запускать нашу функцию interface

Разберемся что это значит. Всее переменые в Пайтон которые начинаються с нижнего пдчеркивания двух называються специальной переменой. Они как то из начально зарезирвированы и
знают свои определеные значения и что обозначае name она будит хранить в себе main если мы запустили програму прямо. Это значит будит запускаться наша функция интерфейс 