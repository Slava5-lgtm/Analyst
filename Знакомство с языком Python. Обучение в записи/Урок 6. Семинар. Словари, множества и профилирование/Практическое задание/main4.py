#                                                               Задача 4. Палиндром

# Пользователь вводит строку. Необходимо написать программу, которая определяет, существует ли у этой строки перестановка, при которой она станет палиндромом (Палиндром – слово,
# которое читается одинаково в обе стороны.). Затем она должна выводить соответствующее сообщение.

#                                                                        Пример 1

# Введите строку: aab
# Можно сделать палиндромом

#                                                                        Пример 2

# Введите строку: aabc
# Нельзя сделать палиндромом

#                                                                       Подсказка № 1

# Используйте цикл для прохода по каждому символу строки. Для каждого символа увеличивайте его счетчик в словаре. Для этого можно использовать метод get словаря, который позволяет
# избежать ошибки, если символ еще не добавлен в словарь.

#                                                                       Подсказка № 2

# После подсчета количества вхождений всех символов, пройдите по значениям словаря и посчитайте, сколько из них имеют нечетное количество вхождений. Для этого используйте оператор %
# для определения четности количества.

#                                                                       Подсказка № 3

# Для строки, чтобы быть палиндромом, все символы должны быть сбалансированы по количеству, за исключением, возможно, одного символа. Проверьте, не превышает ли количество символов
# с нечетными вхождениями один. Это условие должно быть выполнено для возможности создания палиндрома.

#                                                                       Подсказка № 4

# Функция is_poly должна возвращать True, если количество символов с нечетными вхождениями не превышает одного, и False в противном случае. В основной части программы, после вызова
# функции, выводите соответствующее сообщение на основе ее результата.

#                                                                       Эталонное решение:

def is_poly(string):
# Создаем словарь для подсчета количества вхождений каждого символа
    char_dict = dict()
    # Проходим по каждому символу в строке
    for i_sym in string:
        # Увеличиваем счетчик для текущего символа
        char_dict[i_sym] = char_dict.get(i_sym, 0) + 1
    # Переменная для подсчета символов с нечетным количеством вхождений
    odd_count = 0
# Проходим по значениям словаря (количеству вхождений символов)
    for i_value in char_dict.values():
        # Если количество вхождений нечетное, увеличиваем счетчик нечетных
        if i_value % 2 != 0:
            odd_count += 1
    # Палиндром может быть составлен, если не более одного символа имеет нечетное количество вхождений
    return odd_count <= 1
# Запрашиваем у пользователя ввод строки
my_string = input('Введите строку: ')
# Проверяем, можно ли сделать палиндром из введенной строки
if is_poly(my_string):
    print('Можно сделать палиндромом')
else:
    print('Нельзя сделать палиндромом')