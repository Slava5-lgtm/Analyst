#                                                       Задание 3. Три списка

# Даны три списка.
# array_1 = [1, 5, 10, 20, 40, 80, 100]
# array_2 = [6, 7, 20, 80, 100]
# array_3 = [3, 4, 15, 20, 30, 70, 80, 120]
# Нужно выполнить две задачи:
# 1. найти элементы, которые есть в каждом списке;
# 2. найти элементы из первого списка, которых нет во втором и третьем списках.
# Каждую задачу нужно выполнить двумя способами:
# 1. без использования множеств;
# 2. с использованием множеств.

# Пример выполнения на других данных:
# array_1 = [1, 2, 3, 4]
# array_2 = [2, 4]
# array_3 = [2, 3]

# Вывод:
# Задача 1:
# Решение без множеств: 2
# Решение с множествами: 2

# Задача 2:
# Решение без множеств: 1
# Решение с множествами: 1

#                                                           Подсказка № 1

# Для выполнения первой задачи без использования множеств, объедините все три списка в один и проверьте наличие элементов в каждом из них. Это можно сделать с помощью цикла и
# проверки каждого элемента на присутствие в исходных списках.

#                                                           Подсказка № 2

# Используйте логическое выражение all для проверки наличия элемента в каждом из списков. Это поможет вам избежать множественных проверок внутри цикла и сделать код более читаемым.

#                                                           Подсказка № 3

# Для решения первой задачи с использованием множеств, используйте операцию пересечения (&) для нахождения общих элементов. Преобразуйте списки в множества и примените оператор
# пересечения, чтобы найти элементы, которые есть во всех трех списках.
 
#                                                           Подсказка № 4

# Для второй задачи без использования множеств, создайте новый список, в который добавляйте только те элементы из первого списка, которых нет во втором и третьем списках. Используйте операторы not in для проверки отсутствия элемента.

#                                                           Подсказка № 5

# Для решения второй задачи с использованием множеств, используйте операцию разности (-) между множествами. Преобразуйте списки в множества и примените оператор разности для
# нахождения элементов из первого списка, которые отсутствуют во втором и третьем списках.

#                                                           Эталонное решение:

# Даны три списка
array_1 = [1, 5, 10, 20, 40, 80, 100]
array_2 = [6, 7, 20, 80, 100]
array_3 = [3, 4, 15, 20, 30, 70, 80, 120]
# Задача 1: найти элементы, которые есть в каждом списке

# Решение без использования множеств
all_elems = array_1 + array_2 + array_3 # Объединяем все списки в один
new_elems_1 = []
for elem in all_elems:
# Проверяем, если элемент не добавлен ранее и присутствует во всех трех списках
    if elem not in new_elems_1 and all(elem in array for array in [array_1, array_2, array_3]):
        new_elems_1.append(elem) # Добавляем элемент в результат
print("Решение без множеств:", new_elems_1)

# Решение с использованием множеств
new_elems_1_set = set(array_1) & set(array_2) & set(array_3) # Пересечение трех множеств
print("Решение с множествами:", new_elems_1_set)

# Задача 2: найти элементы из первого списка, которых нет во втором и третьем списках

# Решение без использования множеств
new_elems_2 = []
for elem in array_1:
# Проверяем, если элемент отсутствует во втором и третьем списках
    if elem not in array_2 and elem not in array_3:
        new_elems_2.append(elem) # Добавляем элемент в результат
print("Решение без множеств:", new_elems_2)

# Решение с использованием множеств

new_elems_2_set = set(array_1) - set(array_2) - set(array_3) # Разность множеств
print("Решение с множествами:", new_elems_2_set)
