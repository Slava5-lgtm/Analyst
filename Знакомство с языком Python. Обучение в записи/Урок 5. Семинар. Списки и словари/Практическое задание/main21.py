#                                                           Задача 3.

#                                                                  Сортировка

# Дан список из N чисел. Напишите программу, которая сортирует элементы списка по возрастанию и выводит их на экран. Дополнительный список использовать нельзя. Также
# нельзя использовать готовые функции sorted/min/max и метод sort Постарайтесь придумать и написать как можно более эффективный алгоритм сортировки.

#                                                                   Пример:

#                                                           Изначальный список: [1, 4, –3, 0, 10]
#                                                           Отсортированный список: [–3, 0, 1, 4, 10]

#                                                                   Подсказка № 1

# Используйте алгоритм сортировки пузырьком (Bubble Sort). В этом алгоритме два вложенных цикла сравнивают элементы списка и меняют их местами, если они находятся в
# неправильном порядке.

#                                                                   Подсказка № 2

# Во внешнем цикле проходите по всем элементам списка, за исключением последнего элемента на каждом шаге, так как он уже будет на своем месте. Внутренний цикл сравнивает
# и меняет местами соседние элементы списка.

#                                                                   Подсказка № 3

# Во внутреннем цикле сравнивайте текущий элемент с следующим. Если текущий элемент больше следующего, меняйте их местами. Это приведет к тому, что на каждом проходе
# элементы с наибольшим значением будут перемещаться в конец списка.

#                                                                   Эталонное решение:

# Исходный список чисел
original_list = [1, 4, -3, 0, 10]

# Вывод исходного списка

print('Изначальный список: ', original_list)

# Реализация сортировки пузырьком (Bubble Sort)
for i in range(len(original_list) - 1):

    # Проход по всем элементам списка, за исключением уже отсортированных
    for j in range(len(original_list) - 1 - i):
        
        # Сравнение текущего элемента с следующим
        if original_list[j] > original_list[j + 1]:
            
            # Если текущий элемент больше следующего, меняем их местами
            original_list[j], original_list[j + 1] = original_list[j + 1], original_list[j]

# Вывод отсортированного списка
print('Отсортированный список: ', original_list)