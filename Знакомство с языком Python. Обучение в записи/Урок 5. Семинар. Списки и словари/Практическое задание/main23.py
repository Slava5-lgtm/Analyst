#                                                   Задача 5.

#                                                               Пицца

# В базе данных интернет-магазина PizzaTime хранятся сведения о том, кто, что и сколько заказывал у них в определённый период. Вам нужно структурировать эту информацию и
# определить, сколько всего пицц купил каждый заказчик.

# На вход в программу подаётся N заказов. Каждый заказ представляет собой строку вида «Покупатель — название пиццы — количество заказанных пицц». Реализуйте код, который
# выводит список покупателей и их заказов по алфавиту. Учитывайте, что один человек может заказать одну и ту же пиццу несколько раз.

#                                                              Пример

# Введите количество заказов: 6
# Первый заказ: Иванов Пепперони 1
# Второй заказ: Петров Де-Люкс 2
# Третий заказ: Иванов Мясная 3
# Четвёртый заказ: Иванов Мексиканская 2
# Пятый заказ: Иванов Пепперони 2
# Шестой заказ: Петров Интересная 5
# Иванов:
# Мексиканская: 2
# Мясная: 3
# Пепперони: 3
# Петров:
# Де-Люкс: 2
#Интересная: 5

#                                                               Подсказка № 1

# Для обработки каждого заказа используйте метод split() для разделения строки на компоненты: покупателя, название пиццы и количество. Преобразуйте количество из строки в
# целое число для последующих операций.

#                                                               Подсказка № 2

# Используйте вложенные словари для хранения данных. Внешний словарь будет содержать покупателя как ключ и внутренний словарь как значение. Внутренний словарь будет
# хранить названия пицц и их количества.

#                                                               Подсказка № 3

# Если покупатель уже существует в словаре, проверьте, есть ли в его списке пицца, которую он заказал. Если пицца уже есть, увеличьте количество. Если нет — добавьте 
# новую запись.

#                                                               Эталонное решение:

# Ввод количества заказов
orders_count = int(input('Введите количество заказов: '))

# Создаем пустой словарь для хранения данных о заказах
database = dict()

# Обрабатываем каждый заказ
for i_order in range(orders_count):

    # Вводим заказ и разбиваем его на части
    customer, pizza_name, count = input('{} заказ: '.format(i_order + 1)).split()

    # Преобразуем количество в целое число
    count = int(count)

    # Если покупатель еще не добавлен в словарь
    if customer not in database:

        # Добавляем покупателя и начальную запись о пицце
        database[customer] = {pizza_name: count}

    else:
    # Если покупатель уже есть
        if pizza_name in database[customer]:

            # Если пицца уже была заказана ранее, увеличиваем количество
            database[customer][pizza_name] += count
        else:

            # Если пицца новая для этого покупателя, добавляем запись
            database[customer][pizza_name] = count

# Сортируем список покупателей в алфавитном порядке и выводим информацию
for customer in sorted(database.keys()):
    print('{}:'.format(customer))

    # Сортируем пиццы по алфавиту и выводим информацию
    for pizza_name in sorted(database[customer].keys()):
        print(' {}: {}'.format(pizza_name, database[customer][pizza_name]))
