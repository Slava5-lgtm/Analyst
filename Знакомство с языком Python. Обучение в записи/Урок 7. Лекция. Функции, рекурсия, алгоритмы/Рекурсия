
                                                                        Рекурсия

Рекурсия — это функция, вызывающая сама себя. С рекурсией Вы знакомы с (C(шарп)), в Python она ничем не отличается, давай рассмотрим следующую задачу: Пользователь вводит число n
Необходимо вывести n - первых членов последовательности Фибоначчи.

Напоминание: Последовательно Фибоначчи, это такая последовательность, в которой каждое последующее число равно сумму 2-ух предыдущих. При описании рекурсии важно указать, когда
функции надо остановиться и перестать вызывать саму себя. По-другому говоря, необходимо указать базис рекурсии

Внутри функции fib(n), мы сначала задаем базис, если число n равно 1 или 2, это означает, что первое число и второе число последовательности равны 1. Мы так и делаем возвращаем 1.
Как мы ранее проговорили: “Последовательно Фибоначчи, это такая последовательность, в которой каждое последующее число равно сумму 2-ух предыдущих”. Так и делаем, складываем на 2
предыдущих числа друг с другом и получаем 3.

Решение:                                        
def fib(n):                                     Создали функцию def которое принемает одно значение это наше число (n)
 if n in [1, 2]:                                Указываем условия выхода если (if) наша переменая (n) будет находиться в списке [1,2]
 return 1                                       То мы должны вернуть 1
 return fib(n - 1) + fib(n - 2)                 В противном случае мы возврашаем нашу рекурсию
list_1 = []                                    Создали список list_1 в который будем записывать наш числа
for i in range(1, 10):                         Далее пройдемся по циклу for i in range (и укажем от 1 до 10) 
    list_1.append(fib(i))                      При каждой итерации цикла мы в наш список list_1 будем добовлять (append) вызов нашей функции fib
print(list_1) # [1, 1, 2, 3, 5, 8, 13, 21, 34] Выводим