#                                               Задача 4.

#                                           Список списков

# Дан список: nice_list = [1, 2, [3, 4], [[5, 6, 7], [8, 9, 10]], [[11, 12, 13], [14, 15], [16, 17, 18]]]
# Напишите рекурсивную функцию, которая раскрывает все вложенные списки, то есть оставляет только внешний список.
# Ответ: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]
# Функция должна получать список и возвращать его раскрытую версию (не нужно добавлять элементы в список, записанный в глобальную переменную, созданную снаружи функции).

#                                           Подсказка № 1

# Начните с создания функции flatten, которая принимает один аргумент — список с возможными вложенными списками. В функции создайте пустой список result, который будет хранить
# элементы без вложений.

#                                           Подсказка № 2

# Используйте цикл for для перебора всех элементов в переданном списке a_list. Проверяйте каждый элемент, чтобы определить, является ли он целым числом или вложенным списком.

#                                           Подсказка № 3

# Если элемент является числом (проверка с isinstance(e, int)), добавьте его в result. Если элемент — список, выполните рекурсивный вызов функции flatten с этим списком в качестве
# аргумента.

#                                           Подсказка № 4

# Для добавления результатов рекурсивного вызова используйте метод extend, чтобы все элементы вложенного списка были добавлены в result как отдельные элементы.

#                                           Эталонное решение:

def flatten(a_list):
    
    # Инициализация пустого списка для хранения результата
    result = []
    
    # Перебор каждого элемента в списке
    for e in a_list:
        
        # Проверка, является ли элемент целым числом
        if isinstance(e, int):
            result.append(e) # Добавление числа в результат
        else:

            # Рекурсивный вызов функции для вложенного списка
            result.extend(flatten(e)) # Раскрытие вложенных списков

    # Возвращаем окончательный результат
    return result

# Исходный список с вложенными элементами
nice_list = [1, 2, [3, 4], [[5, 6, 7], [8, 9, 10]], [[11, 12, 13],
[14, 15], [16, 17, 18]]]
# Применение функции для получения списка с раскрытыми элементами
flattened_list = flatten(nice_list)
# Вывод результата
print(flattened_list) # Ожидаемый результат: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]